package lu.wealins.liability.services.core.persistence.entity;
// Generated Dec 1, 2016 12:16:30 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import lu.wealins.liability.services.core.utils.Historizable;

/**
 * FundEntity generated by hbm2java
 */
@Entity
@Table(name = "FUNDS")
@NamedNativeQueries({
		@NamedNativeQuery(name = "FundEntity.findInvestedFunds", query = "select f.* from funds f where f.FDS_ID in (" +
				"select fund from POLICY_FUND_HOLDINGS pfh where status = 1 and FK_POLICIESPOL_ID = :polId group by FUND having sum(units) > 0)", resultClass = FundEntity.class)
})
@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler", "createdProcess", "modifyProcess", "createdBy", "createdDate", "createdTime", "modifyDate", "modifyTime", "modifyBy" })
@Historizable(id = "fdsId")
public class FundEntity implements java.io.Serializable {

	private static final long serialVersionUID = -4368932461255837905L;

	@Transient
	public static final Integer FDSID_LENGTH = 8;

	private String fdsId;
	private String currency;
	private Integer fundType;
	private String name;
	private Integer pricingFrequency;
	private Integer pricingDay;
	private Integer pricingDayOfMonth;
	private Integer priceBasis;
	private BigDecimal bidOfferSpread;
	private Integer status;
	private Integer unitTypes;
	private Integer fwdPriceReportDays;
	private String groupingCode;
	private String createdBy;
	private Date createdDate;
	private Date createdTime;
	private String createdProcess;
	private String modifyBy;
	private Date modifyDate;
	private Date modifyTime;
	private String modifyProcess;
	private Date pricingTime;
	private Integer accountingStream;
	private String documentationName;
	private String isinCode;
	private String nlProduct;
	private Date cutOffTime;
	private String ulFundType;
	private BigDecimal maxAllocationPercent;
	private String assetManager;
	private AgentEntity assetManagerAgent;
	private String depositBank;
	private AgentEntity depositBankAgent;
	private String country;
	private BigDecimal navEntryFee;
	private BigDecimal navExitFee;
	private String riskProfile;
	private String riskCurrency;
	private String investCat;
	private String investObjective;
	private String alternativeFunds;
	private Date riskProfileDate;
	private String notes;
	private Integer pricingDelay;
	private String iban;
	private String salesRep;
	private BigDecimal investCashLimit;
	private Short poa;
	private String poaType;
	private String mandateHolder;
	private Date poaDate;
	private String fundClassification;
	private String classOfRisk;
	private Short privateEquity;
	private BigDecimal privateEquityFee;
	private String performanceFee;
	private String depositAccount;
	private String accountRoot;
	private String fundSubType;
	private BigDecimal assetManagerFee;
	private BigDecimal finFeesFlatAmount;
	private BigDecimal finFeesMinAmount;
	private BigDecimal finFeesMaxAmount;
	private BigDecimal bankDepositFee;
	private Short assetManRiskProfile;
	private Boolean poc;
	private Date pocDate;
	private String pocType;
	private String consultant;
	private String financialAdvisor;
	private AgentEntity financialAdvisorAgent;
	private BigDecimal finAdvisorFee;
	private BigDecimal depositBankFlatFee;
	private String assetManFeeCcy;
	private String bankDepFeeCcy;
	private String finAdvisorFeeCcy;
	private String broker;
	private AgentEntity brokerAgent;
	private Boolean ucits;
	private BigDecimal maxAllocationA;
	private BigDecimal maxAllocationB;
	private BigDecimal maxAllocationC;
	private BigDecimal maxAllocationD;
	private BigDecimal maxAllocationN;
	private Integer exportedFund;
	private String exAssManNotes;
	private String exDepBankNotes;
	private String exRiskProfileNotes;
	private Boolean exAllInFees;
	private String exDepositBankContact;
	
	/* END not used */

	@JsonIgnore
	private Set<FundHoldingEntity> fundHoldings = new HashSet<FundHoldingEntity>(0);
	@JsonIgnore
	private Set<ProductValueEntity> productValues = new HashSet<ProductValueEntity>(0);
	@JsonIgnore
	private Set<FundTransactionDateEntity> fundTransactionDates = new HashSet<FundTransactionDateEntity>(0);
	@JsonIgnore
	private Set<OrderEntity> orders = new HashSet<OrderEntity>(0);
	@JsonIgnore
	private Set<FundManagementDetailEntity> fundManagementDetails = new HashSet<FundManagementDetailEntity>(0);
	@JsonIgnore
	private Set<FundEventEntity> fundEvents = new HashSet<FundEventEntity>(0);
	@JsonIgnore
	private Set<FundPriceEntity> fundPrices = new HashSet<FundPriceEntity>(0);
	@JsonIgnore
	private Set<PolicyFundDirectionEntity> policyFundDirections = new HashSet<PolicyFundDirectionEntity>(0);
	@JsonIgnore
	private Set<PolicyFundHoldingEntity> policyFundHoldings = new HashSet<PolicyFundHoldingEntity>(0);
		
	/**
	 * @return the exDepBankNotes
	 */
	@Column(name = "EX_DEP_BANK_NOTES", nullable = true, length = 1000)
	public String getExDepBankNotes() {
		return exDepBankNotes;
	}

	/**
	 * @param exDepBankNotes the exDepBankNotes to set
	 */
	public void setExDepBankNotes(String exDepBankNotes) {
		this.exDepBankNotes = exDepBankNotes;
	}

	/**
	 * @return the exRiskProfileNotes
	 */
	@Column(name = "EX_RISK_PROFILE_NOTES", nullable = true, length = 1000)
	public String getExRiskProfileNotes() {
		return exRiskProfileNotes;
	}

	/**
	 * @param exRiskProfileNotes the exRiskProfileNotes to set
	 */
	public void setExRiskProfileNotes(String exRiskProfileNotes) {
		this.exRiskProfileNotes = exRiskProfileNotes;
	}

	/**
	 * @return the exAllInFees
	 */
	@Column(name = "EX_ALL_IN_FEES", nullable = true)
	public Boolean getExAllInFees() {
		return exAllInFees;
	}

	/**
	 * @param exAllInFees the exAllInFees to set
	 */
	public void setExAllInFees(Boolean exAllInFees) {
		this.exAllInFees = exAllInFees;
	}

	/**
	 * @return the exAssManNotes
	 */
	@Column(name = "EX_ASS_MAN_NOTES", nullable = true, length = 1000)
	public String getExAssManNotes() {
		return exAssManNotes;
	}

	/**
	 * @param exAssManNotes the exAssManNotes to set
	 */
	public void setExAssManNotes(String exAssManNotes) {
		this.exAssManNotes = exAssManNotes;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEPOSIT_BANK", updatable = false, insertable = false)
	@NotFound(action = NotFoundAction.IGNORE)
	public AgentEntity getDepositBankAgent() {
		return depositBankAgent;
	}

	public void setDepositBankAgent(AgentEntity depositBankAgent) {
		this.depositBankAgent = depositBankAgent;
	}
	
	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FINANCIAL_ADVISOR", updatable = false, insertable = false)
	@NotFound(action = NotFoundAction.IGNORE)
	public AgentEntity getFinancialAdvisorAgent() {
		return financialAdvisorAgent;
	}

	public void setFinancialAdvisorAgent(AgentEntity financialAdvisorAgent) {
		this.financialAdvisorAgent = financialAdvisorAgent;
	}

	@Id
	@Column(name = "FDS_ID", unique = true, nullable = false, length = 8)
	public String getFdsId() {
		return this.fdsId;
	}

	public void setFdsId(String fdsId) {
		this.fdsId = fdsId;
	}

	@Column(name = "CURRENCY", nullable = false, length = 5)
	public String getCurrency() {
		return this.currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	@Column(name = "FUND_TYPE", nullable = false)
	public Integer getFundType() {
		return this.fundType;
	}

	public void setFundType(Integer fundType) {
		this.fundType = fundType;
	}

	@Column(name = "NAME", nullable = false, length = 35)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "PRICING_FREQUENCY", nullable = false)
	public Integer getPricingFrequency() {
		return this.pricingFrequency;
	}

	public void setPricingFrequency(Integer pricingFrequency) {
		this.pricingFrequency = pricingFrequency;
	}

	@Column(name = "PRICING_DAY")
	public Integer getPricingDay() {
		return this.pricingDay;
	}

	public void setPricingDay(Integer pricingDay) {
		this.pricingDay = pricingDay;
	}

	@Column(name = "PRICING_DAY_OF_MONTH")
	public Integer getPricingDayOfMonth() {
		return this.pricingDayOfMonth;
	}

	public void setPricingDayOfMonth(Integer pricingDayOfMonth) {
		this.pricingDayOfMonth = pricingDayOfMonth;
	}

	@Column(name = "PRICE_BASIS", nullable = false)
	public Integer getPriceBasis() {
		return this.priceBasis;
	}

	public void setPriceBasis(Integer priceBasis) {
		this.priceBasis = priceBasis;
	}

	@Column(name = "BID_OFFER_SPREAD", precision = 8, scale = 4)
	public BigDecimal getBidOfferSpread() {
		return this.bidOfferSpread;
	}

	public void setBidOfferSpread(BigDecimal bidOfferSpread) {
		this.bidOfferSpread = bidOfferSpread;
	}

	@Column(name = "STATUS", nullable = false)
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "UNIT_TYPES", nullable = false)
	public Integer getUnitTypes() {
		return this.unitTypes;
	}

	public void setUnitTypes(Integer unitTypes) {
		this.unitTypes = unitTypes;
	}

	@Column(name = "FWD_PRICE_REPORT_DAYS")
	public Integer getFwdPriceReportDays() {
		return this.fwdPriceReportDays;
	}

	public void setFwdPriceReportDays(Integer fwdPriceReportDays) {
		this.fwdPriceReportDays = fwdPriceReportDays;
	}

	@Column(name = "GROUPING_CODE", length = 10)
	public String getGroupingCode() {
		return this.groupingCode;
	}

	public void setGroupingCode(String groupingCode) {
		this.groupingCode = groupingCode;
	}

	@Column(name = "CREATED_BY", nullable = false, length = 5)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", nullable = false, length = 23)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TIME", nullable = false, length = 23)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "CREATED_PROCESS", length = 12)
	public String getCreatedProcess() {
		return this.createdProcess;
	}

	public void setCreatedProcess(String createdProcess) {
		this.createdProcess = createdProcess;
	}

	@Column(name = "MODIFY_BY", length = 5)
	public String getModifyBy() {
		return this.modifyBy;
	}

	public void setModifyBy(String modifyBy) {
		this.modifyBy = modifyBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_DATE", length = 23)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_TIME", length = 23)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "MODIFY_PROCESS", length = 12)
	public String getModifyProcess() {
		return this.modifyProcess;
	}

	public void setModifyProcess(String modifyProcess) {
		this.modifyProcess = modifyProcess;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PRICING_TIME", length = 23)
	public Date getPricingTime() {
		return this.pricingTime;
	}

	public void setPricingTime(Date pricingTime) {
		this.pricingTime = pricingTime;
	}

	@Column(name = "ACCOUNTING_STREAM")
	public Integer getAccountingStream() {
		return this.accountingStream;
	}

	public void setAccountingStream(Integer accountingStream) {
		this.accountingStream = accountingStream;
	}

	@Column(name = "DOCUMENTATION_NAME", length = 100)
	public String getDocumentationName() {
		return this.documentationName;
	}

	public void setDocumentationName(String documentationName) {
		this.documentationName = documentationName;
	}

	@Column(name = "ISIN_CODE", length = 12)
	public String getIsinCode() {
		return this.isinCode;
	}

	public void setIsinCode(String isinCode) {
		this.isinCode = isinCode;
	}

	@Column(name = "NL_PRODUCT", length = 3)
	public String getNlProduct() {
		return this.nlProduct;
	}

	public void setNlProduct(String nlProduct) {
		this.nlProduct = nlProduct;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CUT_OFF_TIME", length = 23)
	public Date getCutOffTime() {
		return this.cutOffTime;
	}

	public void setCutOffTime(Date cutOffTime) {
		this.cutOffTime = cutOffTime;
	}

	@Column(name = "UL_FUND_TYPE", length = 8)
	public String getUlFundType() {
		return this.ulFundType;
	}

	public void setUlFundType(String ulFundType) {
		this.ulFundType = ulFundType;
	}

	@Column(name = "MAX_ALLOCATION_PERCENT", precision = 8, scale = 4)
	public BigDecimal getMaxAllocationPercent() {
		return this.maxAllocationPercent;
	}

	public void setMaxAllocationPercent(BigDecimal maxAllocationPercent) {
		this.maxAllocationPercent = maxAllocationPercent;
	}

	@Column(name = "ASSET_MANAGER", length = 8)
	public String getAssetManager() {
		return this.assetManager;
	}

	public void setAssetManager(String assetManager) {
		this.assetManager = assetManager;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ASSET_MANAGER", updatable = false, insertable = false)
	@NotFound(action = NotFoundAction.IGNORE)
	public AgentEntity getAssetManagerAgent() {
		return this.assetManagerAgent;
	}

	public void setAssetManagerAgent(AgentEntity assetManagerAgent) {
		this.assetManagerAgent = assetManagerAgent;
	}

	@Column(name = "DEPOSIT_BANK", length = 8)
	public String getDepositBank() {
		return this.depositBank;
	}

	public void setDepositBank(String depositBank) {
		this.depositBank = depositBank;
	}

	@Column(name = "COUNTRY", length = 27)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "NAV_ENTRY_FEE", precision = 15, scale = 6)
	public BigDecimal getNavEntryFee() {
		return this.navEntryFee;
	}

	public void setNavEntryFee(BigDecimal navEntryFee) {
		this.navEntryFee = navEntryFee;
	}

	@Column(name = "NAV_EXIT_FEE", precision = 15, scale = 6)
	public BigDecimal getNavExitFee() {
		return this.navExitFee;
	}

	public void setNavExitFee(BigDecimal navExitFee) {
		this.navExitFee = navExitFee;
	}

	@Column(name = "RISK_PROFILE", length = 8)
	public String getRiskProfile() {
		return this.riskProfile;
	}

	public void setRiskProfile(String riskProfile) {
		this.riskProfile = riskProfile;
	}

	@Column(name = "RISK_CURRENCY", length = 8)
	public String getRiskCurrency() {
		return this.riskCurrency;
	}

	public void setRiskCurrency(String riskCurrency) {
		this.riskCurrency = riskCurrency;
	}

	@Column(name = "INVEST_CAT", length = 8)
	public String getInvestCat() {
		return this.investCat;
	}

	public void setInvestCat(String investCat) {
		this.investCat = investCat;
	}

	@Column(name = "INVEST_OBJECTIVE", length = 8)
	public String getInvestObjective() {
		return this.investObjective;
	}

	public void setInvestObjective(String investObjective) {
		this.investObjective = investObjective;
	}

	@Column(name = "ALTERNATIVE_FUNDS", length = 8)
	public String getAlternativeFunds() {
		return this.alternativeFunds;
	}

	public void setAlternativeFunds(String alternativeFunds) {
		this.alternativeFunds = alternativeFunds;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RISK_PROFILE_DATE", length = 23)
	public Date getRiskProfileDate() {
		return this.riskProfileDate;
	}

	public void setRiskProfileDate(Date riskProfileDate) {
		this.riskProfileDate = riskProfileDate;
	}

	@Column(name = "NOTES", length = 100)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "PRICING_DELAY")
	public Integer getPricingDelay() {
		return this.pricingDelay;
	}

	public void setPricingDelay(Integer pricingDelay) {
		this.pricingDelay = pricingDelay;
	}

	@Column(name = "IBAN", length = 35)
	public String getIban() {
		return this.iban;
	}

	public void setIban(String iban) {
		this.iban = iban;
	}

	@Column(name = "SALES_REP", length = 8)
	public String getSalesRep() {
		return this.salesRep;
	}

	public void setSalesRep(String salesRep) {
		this.salesRep = salesRep;
	}

	@Column(name = "INVEST_CASH_LIMIT", precision = 15)
	public BigDecimal getInvestCashLimit() {
		return this.investCashLimit;
	}

	public void setInvestCashLimit(BigDecimal investCashLimit) {
		this.investCashLimit = investCashLimit;
	}

	@Column(name = "POA")
	public Short getPoa() {
		return this.poa;
	}

	public void setPoa(Short poa) {
		this.poa = poa;
	}

	@Column(name = "POA_TYPE", length = 12)
	public String getPoaType() {
		return this.poaType;
	}

	public void setPoaType(String poaType) {
		this.poaType = poaType;
	}

	@Column(name = "MANDATE_HOLDER", length = 8)
	public String getMandateHolder() {
		return this.mandateHolder;
	}

	public void setMandateHolder(String mandateHolder) {
		this.mandateHolder = mandateHolder;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "POA_DATE", length = 23)
	public Date getPoaDate() {
		return this.poaDate;
	}

	public void setPoaDate(Date poaDate) {
		this.poaDate = poaDate;
	}

	@Column(name = "FUND_CLASSIFICATION", length = 1)
	public String getFundClassification() {
		return this.fundClassification;
	}

	public void setFundClassification(String fundClassification) {
		this.fundClassification = fundClassification;
	}

	@Column(name = "CLASS_OF_RISK", length = 1)
	public String getClassOfRisk() {
		return this.classOfRisk;
	}

	public void setClassOfRisk(String classOfRisk) {
		this.classOfRisk = classOfRisk;
	}

	@Column(name = "PRIVATE_EQUITY", length = 4)
	public Short getPrivateEquity() {
		return privateEquity;
	}

	public void setPrivateEquity(Short privateEquity) {
		this.privateEquity = privateEquity;
	}

	@Column(name = "PRIVATE_EQUITY_FEE", length = 17)
	public BigDecimal getPrivateEquityFee() {
		return privateEquityFee;
	}

	public void setPrivateEquityFee(BigDecimal privateEquityFee) {
		this.privateEquityFee = privateEquityFee;
	}

	@Column(name = "PERFORMANCE_FEE", length = 100)
	public String getPerformanceFee() {
		return performanceFee;
	}

	public void setPerformanceFee(String performanceFee) {
		this.performanceFee = performanceFee;
	}

	@Column(name = "DEPOSIT_ACCOUNT", length = 20)
	public String getDepositAccount() {
		return depositAccount;
	}

	public void setDepositAccount(String depositAccount) {
		this.depositAccount = depositAccount;
	}

	@Column(name = "ACCOUNT_ROOT", length = 20)
	public String getAccountRoot() {
		return accountRoot;
	}

	public void setAccountRoot(String accountRoot) {
		this.accountRoot = accountRoot;
	}

	@Column(name = "FUND_SUB_TYPE", length = 3)
	public String getFundSubType() {
		return fundSubType;
	}

	public void setFundSubType(String fundSubType) {
		this.fundSubType = fundSubType;
	}

	@Column(name = "ASSET_MANAGER_FEE", length = 17)
	public BigDecimal getAssetManagerFee() {
		return assetManagerFee;
	}

	public void setAssetManagerFee(BigDecimal assetManagerFee) {
		this.assetManagerFee = assetManagerFee;
	}

	@Column(name = "FIN_FEES_FLAT_AMOUNT", length = 17)
	public BigDecimal getFinFeesFlatAmount() {
		return finFeesFlatAmount;
	}

	public void setFinFeesFlatAmount(BigDecimal finFeesFlatAmount) {
		this.finFeesFlatAmount = finFeesFlatAmount;
	}

	@Column(name = "FIN_FEES_MIN_AMOUNT", length = 17)
	public BigDecimal getFinFeesMinAmount() {
		return finFeesMinAmount;
	}

	public void setFinFeesMinAmount(BigDecimal finFeesMinAmount) {
		this.finFeesMinAmount = finFeesMinAmount;
	}

	@Column(name = "FIN_FEES_MAX_AMOUNT", length = 17)
	public BigDecimal getFinFeesMaxAmount() {
		return finFeesMaxAmount;
	}

	public void setFinFeesMaxAmount(BigDecimal finFeesMaxAmount) {
		this.finFeesMaxAmount = finFeesMaxAmount;
	}

	@Column(name = "BANK_DEPOSIT_FEE", length = 17)
	public BigDecimal getBankDepositFee() {
		return bankDepositFee;
	}

	public void setBankDepositFee(BigDecimal bankDepositFee) {
		this.bankDepositFee = bankDepositFee;
	}

	@Column(name = "ASSET_MAN_RISK_PROFILE", length = 2)
	public Short getAssetManRiskProfile() {
		return assetManRiskProfile;
	}

	public void setAssetManRiskProfile(Short assetManRiskProfile) {
		this.assetManRiskProfile = assetManRiskProfile;
	}

	@Column(name = "POC", length = 2)
	public Boolean getPoc() {
		return poc;
	}

	public void setPoc(Boolean poc) {
		this.poc = poc;
	}

	@Column(name = "POC_TYPE", length = 12)
	public String getPocType() {
		return pocType;
	}

	public void setPocType(String pocType) {
		this.pocType = pocType;
	}

	@Column(name = "POC_DATE", length = 16)
	public Date getPocDate() {
		return pocDate;
	}

	public void setPocDate(Date pocDate) {
		this.pocDate = pocDate;
	}

	@Column(name = "CONSULTANT", length = 8)
	public String getConsultant() {
		return consultant;
	}

	public void setConsultant(String consultant) {
		this.consultant = consultant;
	}

	@Column(name = "FINANCIAL_ADVISOR", length = 8)
	public String getFinancialAdvisor() {
		return financialAdvisor;
	}

	public void setFinancialAdvisor(String financialAdvisor) {
		this.financialAdvisor = financialAdvisor;
	}

	@Column(name = "FIN_ADVISOR_FEE", length = 17)
	public BigDecimal getFinAdvisorFee() {
		return finAdvisorFee;
	}

	public void setFinAdvisorFee(BigDecimal financialAdvisorFee) {
		this.finAdvisorFee = financialAdvisorFee;
	}
	
	/**
	 * @return the depositBankFlatFee
	 */
	@Column(name = "DEPOSIT_BANK_FLAT_FEE", length = 17)
	public BigDecimal getDepositBankFlatFee() {
		return depositBankFlatFee;
	}

	/**
	 * @param depositBankFlatFee the depositBankFlatFee to set
	 */
	public void setDepositBankFlatFee(BigDecimal depositBankFlatFee) {
		this.depositBankFlatFee = depositBankFlatFee;
	}

	/**
	 * @return the assetManFeeCcy
	 */
	@Column(name = "ASSET_MAN_FEE_CCY", length = 3)
	public String getAssetManFeeCcy() {
		return assetManFeeCcy;
	}

	/**
	 * @param assetManFeeCcy the assetManFeeCcy to set
	 */
	public void setAssetManFeeCcy(String assetManFeeCcy) {
		this.assetManFeeCcy = assetManFeeCcy;
	}

	/**
	 * @return the bankDepFeeCcy
	 */
	@Column(name = "BANK_DEP_FEE_CCY", length = 3)
	public String getBankDepFeeCcy() {
		return bankDepFeeCcy;
	}

	/**
	 * @param bankDepFeeCcy the bankDepFeeCcy to set
	 */
	public void setBankDepFeeCcy(String bankDepFeeCcy) {
		this.bankDepFeeCcy = bankDepFeeCcy;
	}

	/**
	 * @return the finAdvisorFeeCcy
	 */
	@Column(name = "FIN_ADVISOR_FEE_CCY", length = 3)
	public String getFinAdvisorFeeCcy() {
		return finAdvisorFeeCcy;
	}

	/**
	 * @param finAdvisorFeeCcy the finAdvisorFeeCcy to set
	 */
	public void setFinAdvisorFeeCcy(String finAdvisorFeeCcy) {
		this.finAdvisorFeeCcy = finAdvisorFeeCcy;
	}

	/**
	 * @return the broker
	 */
	@Column(name = "BROKER", length = 8)
	public String getBroker() {
		return broker;
	}

	/**
	 * @param broker the broker to set
	 */
	public void setBroker(String broker) {
		this.broker = broker;
	}

	/**
	 * @return the broker
	 */
	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BROKER", updatable = false, insertable = false)
	@NotFound(action = NotFoundAction.IGNORE)
	public AgentEntity getBrokerAgent() {
		if (StringUtils.isEmpty(getBroker())) {
			return null;
		}
		return brokerAgent;
	}

	/**
	 * @param broker the broker to set
	 */
	public void setBrokerAgent(AgentEntity brokerAgent) {
		this.brokerAgent = brokerAgent;
	}

	/**
	 * @return the ucits
	 */
	@Column(name = "UCITS", length = 2)
	public Boolean getUcits() {
		return ucits;
	}

	/**
	 * @param ucits the ucits to set
	 */
	public void setUcits(Boolean ucits) {
		this.ucits = ucits;
	}

	/**
	 * @return the maxAllocationA
	 */
	@Column(name = "MAX_ALLOCATION_A", length = 8)
	public BigDecimal getMaxAllocationA() {
		return maxAllocationA;
	}

	/**
	 * @param maxAllocationA the maxAllocationA to set
	 */
	public void setMaxAllocationA(BigDecimal maxAllocationA) {
		this.maxAllocationA = maxAllocationA;
	}

	/**
	 * @return the maxAllocationB
	 */
	@Column(name = "MAX_ALLOCATION_B", length = 8)
	public BigDecimal getMaxAllocationB() {
		return maxAllocationB;
	}

	/**
	 * @param maxAllocationB the maxAllocationB to set
	 */
	public void setMaxAllocationB(BigDecimal maxAllocationB) {
		this.maxAllocationB = maxAllocationB;
	}

	/**
	 * @return the maxAllocationC
	 */
	@Column(name = "MAX_ALLOCATION_C", length = 8)
	public BigDecimal getMaxAllocationC() {
		return maxAllocationC;
	}

	/**
	 * @param maxAllocationC the maxAllocationC to set
	 */
	public void setMaxAllocationC(BigDecimal maxAllocationC) {
		this.maxAllocationC = maxAllocationC;
	}

	/**
	 * @return the maxAllocationD
	 */
	@Column(name = "MAX_ALLOCATION_D", length = 8)
	public BigDecimal getMaxAllocationD() {
		return maxAllocationD;
	}

	/**
	 * @param maxAllocationD the maxAllocationD to set
	 */
	public void setMaxAllocationD(BigDecimal maxAllocationD) {
		this.maxAllocationD = maxAllocationD;
	}

	/**
	 * @return the maxAllocationN
	 */
	@Column(name = "MAX_ALLOCATION_N", length = 8)
	public BigDecimal getMaxAllocationN() {
		return maxAllocationN;
	}

	/**
	 * @param maxAllocationN the maxAllocationN to set
	 */
	public void setMaxAllocationN(BigDecimal maxAllocationN) {
		this.maxAllocationN = maxAllocationN;
	}
	@Column(name = "EXPORTED_FUND")
	public Integer getExportedFund() {
		return exportedFund;
	}

	public void setExportedFund(Integer exportedFund) {
		this.exportedFund = exportedFund;
	}

	public static Integer getFdsidLength() {
		return FDSID_LENGTH;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<FundHoldingEntity> getFundHoldings() {
		return this.fundHoldings;
	}

	public void setFundHoldings(Set<FundHoldingEntity> fundHoldings) {
		this.fundHoldings = fundHoldings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<ProductValueEntity> getProductValues() {
		return this.productValues;
	}

	public void setProductValues(Set<ProductValueEntity> productValues) {
		this.productValues = productValues;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<FundTransactionDateEntity> getFundTransactionDates() {
		return this.fundTransactionDates;
	}

	public void setFundTransactionDates(Set<FundTransactionDateEntity> fundTransactionDates) {
		this.fundTransactionDates = fundTransactionDates;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "HAS", joinColumns = {
			@JoinColumn(name = "FK_FUNDSFDS_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "FK_ORDERSORD_ID", nullable = false, updatable = false) })
	public Set<OrderEntity> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<OrderEntity> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<FundManagementDetailEntity> getFundManagementDetails() {
		return this.fundManagementDetails;
	}

	public void setFundManagementDetails(Set<FundManagementDetailEntity> fundManagementDetails) {
		this.fundManagementDetails = fundManagementDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<FundEventEntity> getFundEvents() {
		return this.fundEvents;
	}

	public void setFundEvents(Set<FundEventEntity> fundEvents) {
		this.fundEvents = fundEvents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<FundPriceEntity> getFundPrices() {
		return this.fundPrices;
	}

	public void setFundPrices(Set<FundPriceEntity> fundPrices) {
		this.fundPrices = fundPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<PolicyFundDirectionEntity> getPolicyFundDirections() {
		return this.policyFundDirections;
	}

	public void setPolicyFundDirections(Set<PolicyFundDirectionEntity> policyFundDirections) {
		this.policyFundDirections = policyFundDirections;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fund")
	public Set<PolicyFundHoldingEntity> getPolicyFundHoldings() {
		return this.policyFundHoldings;
	}

	public void setPolicyFundHoldings(Set<PolicyFundHoldingEntity> policyFundHoldings) {
		this.policyFundHoldings = policyFundHoldings;
	}
	
	@Column(name = "EX_DEPOSIT_BANK_CONTACT", length = 8)
	public String getExDepositBankContact() {
		return exDepositBankContact;
	}

	public void setExDepositBankContact(String exDepositBankContact) {
		this.exDepositBankContact = exDepositBankContact;
	}
}
