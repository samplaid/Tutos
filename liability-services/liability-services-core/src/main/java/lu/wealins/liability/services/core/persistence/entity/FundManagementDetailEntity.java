package lu.wealins.liability.services.core.persistence.entity;
// Generated Dec 1, 2016 12:16:30 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * FundManagementDetailEntity generated by hbm2java
 */
@Entity
@Table(name = "FUND_MANAGEMENT_DETAILS"

)
@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler", "createdProcess", "modifyProcess", "createdBy", "createdDate", "createdTime", "modifyDate", "modifyTime", "modifyBy" })
public class FundManagementDetailEntity implements java.io.Serializable {

	private int fmdId;
	@JsonIgnore
	private FundManagementHeaderEntity fundManagementHeader;
	@JsonIgnore
	private FundEntity fund;
	private int status;
	private int fundType;
	private String fundName;
	private String isinCode;
	private Date priceDate;
	private Date orderDate;
	private String currency;
	private BigDecimal lastPrice;
	private BigDecimal balanceAssetPhUnits;
	private BigDecimal assetCurrFwp;
	private BigDecimal assetFwp;
	private BigDecimal assetCurr;
	private BigDecimal afUnitsAccum;
	private BigDecimal afUnitsInit;
	private BigDecimal afUnits;
	private BigDecimal overUnder;
	private BigDecimal overUnderAbsolute;
	private BigDecimal overUnderUnits;
	private BigDecimal phUnitsFwp;
	private BigDecimal phUnitsCurr;
	private BigDecimal phUnitsCurrInit;
	private BigDecimal phUnitsCurrAccum;
	private BigDecimal phUnitsCurrFwp;
	private BigDecimal value;
	private String createdBy;
	private Date createdDate;
	private Date createdTime;
	private String createdProcess;
	private String modifyBy;
	private Date modifyDate;
	private Date modifyTime;
	private String modifyProcess;

	@Id
	@Column(name = "FMD_ID", unique = true, nullable = false)
	public int getFmdId() {
		return this.fmdId;
	}

	public void setFmdId(int fmdId) {
		this.fmdId = fmdId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_FUND_MANAGEMFMH_ID")
	public FundManagementHeaderEntity getFundManagementHeader() {
		return this.fundManagementHeader;
	}

	public void setFundManagementHeader(FundManagementHeaderEntity fundManagementHeader) {
		this.fundManagementHeader = fundManagementHeader;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FUND", nullable = false)
	@NotFound(action = NotFoundAction.IGNORE)
	public FundEntity getFund() {
		return this.fund;
	}

	public void setFund(FundEntity fund) {
		this.fund = fund;
	}

	@Column(name = "STATUS", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "FUND_TYPE", nullable = false)
	public int getFundType() {
		return this.fundType;
	}

	public void setFundType(int fundType) {
		this.fundType = fundType;
	}

	@Column(name = "FUND_NAME", nullable = false, length = 35)
	public String getFundName() {
		return this.fundName;
	}

	public void setFundName(String fundName) {
		this.fundName = fundName;
	}

	@Column(name = "ISIN_CODE", length = 12)
	public String getIsinCode() {
		return this.isinCode;
	}

	public void setIsinCode(String isinCode) {
		this.isinCode = isinCode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PRICE_DATE", nullable = false, length = 23)
	public Date getPriceDate() {
		return this.priceDate;
	}

	public void setPriceDate(Date priceDate) {
		this.priceDate = priceDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ORDER_DATE", length = 23)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Column(name = "CURRENCY", nullable = false, length = 5)
	public String getCurrency() {
		return this.currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	@Column(name = "LAST_PRICE", nullable = false, precision = 15, scale = 6)
	public BigDecimal getLastPrice() {
		return this.lastPrice;
	}

	public void setLastPrice(BigDecimal lastPrice) {
		this.lastPrice = lastPrice;
	}

	@Column(name = "BALANCE_ASSET_PH_UNITS", precision = 15, scale = 6)
	public BigDecimal getBalanceAssetPhUnits() {
		return this.balanceAssetPhUnits;
	}

	public void setBalanceAssetPhUnits(BigDecimal balanceAssetPhUnits) {
		this.balanceAssetPhUnits = balanceAssetPhUnits;
	}

	@Column(name = "ASSET_CURR_FWP", precision = 15, scale = 6)
	public BigDecimal getAssetCurrFwp() {
		return this.assetCurrFwp;
	}

	public void setAssetCurrFwp(BigDecimal assetCurrFwp) {
		this.assetCurrFwp = assetCurrFwp;
	}

	@Column(name = "ASSET_FWP", precision = 15, scale = 6)
	public BigDecimal getAssetFwp() {
		return this.assetFwp;
	}

	public void setAssetFwp(BigDecimal assetFwp) {
		this.assetFwp = assetFwp;
	}

	@Column(name = "ASSET_CURR", precision = 15, scale = 6)
	public BigDecimal getAssetCurr() {
		return this.assetCurr;
	}

	public void setAssetCurr(BigDecimal assetCurr) {
		this.assetCurr = assetCurr;
	}

	@Column(name = "AF_UNITS_ACCUM", precision = 15, scale = 6)
	public BigDecimal getAfUnitsAccum() {
		return this.afUnitsAccum;
	}

	public void setAfUnitsAccum(BigDecimal afUnitsAccum) {
		this.afUnitsAccum = afUnitsAccum;
	}

	@Column(name = "AF_UNITS_INIT", precision = 15, scale = 6)
	public BigDecimal getAfUnitsInit() {
		return this.afUnitsInit;
	}

	public void setAfUnitsInit(BigDecimal afUnitsInit) {
		this.afUnitsInit = afUnitsInit;
	}

	@Column(name = "AF_UNITS", precision = 15, scale = 6)
	public BigDecimal getAfUnits() {
		return this.afUnits;
	}

	public void setAfUnits(BigDecimal afUnits) {
		this.afUnits = afUnits;
	}

	@Column(name = "OVER_UNDER", precision = 15)
	public BigDecimal getOverUnder() {
		return this.overUnder;
	}

	public void setOverUnder(BigDecimal overUnder) {
		this.overUnder = overUnder;
	}

	@Column(name = "OVER_UNDER_ABSOLUTE", precision = 15)
	public BigDecimal getOverUnderAbsolute() {
		return this.overUnderAbsolute;
	}

	public void setOverUnderAbsolute(BigDecimal overUnderAbsolute) {
		this.overUnderAbsolute = overUnderAbsolute;
	}

	@Column(name = "OVER_UNDER_UNITS", precision = 15, scale = 6)
	public BigDecimal getOverUnderUnits() {
		return this.overUnderUnits;
	}

	public void setOverUnderUnits(BigDecimal overUnderUnits) {
		this.overUnderUnits = overUnderUnits;
	}

	@Column(name = "PH_UNITS_FWP", precision = 15, scale = 6)
	public BigDecimal getPhUnitsFwp() {
		return this.phUnitsFwp;
	}

	public void setPhUnitsFwp(BigDecimal phUnitsFwp) {
		this.phUnitsFwp = phUnitsFwp;
	}

	@Column(name = "PH_UNITS_CURR", precision = 15, scale = 6)
	public BigDecimal getPhUnitsCurr() {
		return this.phUnitsCurr;
	}

	public void setPhUnitsCurr(BigDecimal phUnitsCurr) {
		this.phUnitsCurr = phUnitsCurr;
	}

	@Column(name = "PH_UNITS_CURR_INIT", precision = 15, scale = 6)
	public BigDecimal getPhUnitsCurrInit() {
		return this.phUnitsCurrInit;
	}

	public void setPhUnitsCurrInit(BigDecimal phUnitsCurrInit) {
		this.phUnitsCurrInit = phUnitsCurrInit;
	}

	@Column(name = "PH_UNITS_CURR_ACCUM", precision = 15, scale = 6)
	public BigDecimal getPhUnitsCurrAccum() {
		return this.phUnitsCurrAccum;
	}

	public void setPhUnitsCurrAccum(BigDecimal phUnitsCurrAccum) {
		this.phUnitsCurrAccum = phUnitsCurrAccum;
	}

	@Column(name = "PH_UNITS_CURR_FWP", precision = 15, scale = 6)
	public BigDecimal getPhUnitsCurrFwp() {
		return this.phUnitsCurrFwp;
	}

	public void setPhUnitsCurrFwp(BigDecimal phUnitsCurrFwp) {
		this.phUnitsCurrFwp = phUnitsCurrFwp;
	}

	@Column(name = "VALUE", precision = 15)
	public BigDecimal getValue() {
		return this.value;
	}

	public void setValue(BigDecimal value) {
		this.value = value;
	}

	@Column(name = "CREATED_BY", nullable = false, length = 5)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", nullable = false, length = 23)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TIME", nullable = false, length = 23)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "CREATED_PROCESS", length = 12)
	public String getCreatedProcess() {
		return this.createdProcess;
	}

	public void setCreatedProcess(String createdProcess) {
		this.createdProcess = createdProcess;
	}

	@Column(name = "MODIFY_BY", length = 5)
	public String getModifyBy() {
		return this.modifyBy;
	}

	public void setModifyBy(String modifyBy) {
		this.modifyBy = modifyBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_DATE", length = 23)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_TIME", length = 23)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "MODIFY_PROCESS", length = 12)
	public String getModifyProcess() {
		return this.modifyProcess;
	}

	public void setModifyProcess(String modifyProcess) {
		this.modifyProcess = modifyProcess;
	}

}
