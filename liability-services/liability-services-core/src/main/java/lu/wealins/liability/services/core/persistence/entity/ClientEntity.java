package lu.wealins.liability.services.core.persistence.entity;
// Generated Dec 1, 2016 12:16:30 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import lu.wealins.liability.services.core.utils.Historizable;

/**
 * ClientEntity generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "CLIENTS"

)
@Historizable(id = "cliId")
@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler", "createdProcess", "modifyProcess", "createdBy", "createdDate", "createdTime", "modifyDate", "modifyTime", "modifyBy" })
public class ClientEntity implements java.io.Serializable {

	private int cliId;
	private String name;
	private int type;
	private int status;
	private Integer subStatus;
	private String otherFornames;
	private String firstName;
	private String title;
	private Date dateOfBirth;
	private Integer sex;
	private Integer smoker;
	private String email;
	private String riskCat;
	private String salutation;
	private String mobileTelNo;
	private String residentialProfile;
	private String workTelNo;
	private String leisureRiskCat;
	private String maidenName;
	private Integer documentationLanguage;
	private Integer nameStyle;
	private Integer ageAdmitted;
	private String match0;
	private BigDecimal weight;
	private Integer height;
	private Integer maritalStatus;
	private String nationality;
	private String correspContactType;
	private String classification;
	private String nationalIdNo;
	private String taxNumber;
	private String profile;
	private String ageAdmBasis;
	private String createdProcess;
	private String modifyProcess;
	private String createdBy;
	private Date changeEffectiveDate;
	private Date createdDate;
	private Date createdTime;
	private String modifyBy;
	private Date modifyDate;
	private Date modifyTime;
	private String placeOfBirth;
	private String knowYourCustomer;
	private Date kycDate;
	private Date idExpiryDate;
	private String healthDeclaration;
	private Date healthDecDate;
	private String safewatchBirthdate;
	private String classificationDetails;
	private String politicallyExposedPerson;
	private String pepFunction;
	private String insiderTrading;
	private String insiderTradingDetails;
	private String dap;
	private String countryOfBirth;
	private String provinceOfBirth;
	private String profession;
	private Integer activityRiskCat;
	private Date dateOfRevision;
	private String natIdCountry;
	private String nationalId2;
	private String natId2Country;
	private Integer fiduciary;
	private String vatNumber;
	private String circularLetter;
	private String classOfRisk;
	private String statementByEmail;
	private String mediaExposedPerson;
	private String mepDetail;
	private String relativeCloseAssoc;
	private String rcaDetail;
	private String crsStatus;
	private String crsExactStatus;
	private String commercialEntity;
	private Date dateOfSelfCert;
	private Date crsDateOfLastDec;
	private Date gdprStartdate;
	private Date gdprEnddate;
	private Boolean exceptRisk;
	private Boolean exceptActivityRisk;
	
	@JsonIgnore
	private Set<MemberDetailEntity> memberDetails = new HashSet<MemberDetailEntity>(0);
	@JsonIgnore
	private Set<DocumentRequestEntity> documentRequests = new HashSet<DocumentRequestEntity>(0);
	@JsonIgnore
	private Set<ClientGeneralDetailEntity> clientGeneralDetails = new HashSet<ClientGeneralDetailEntity>(0); // empty table
	@JsonIgnore
	private Set<PolicyRequirementEntity> policyRequirements = new HashSet<PolicyRequirementEntity>(0);
	@JsonIgnore
	private Set<CliCliRelationEntity> cliCliRelations = new HashSet<CliCliRelationEntity>(0);
	@JsonIgnore
	private Set<GeneralNoteEntity> generalNotes = new HashSet<GeneralNoteEntity>(0);
	@JsonIgnore
	private Set<ClientClaimsDetailEntity> clientClaimsDetails = new HashSet<ClientClaimsDetailEntity>(0);
	@JsonIgnore
	private Set<ClientEndorsementEntity> clientEndorsements = new HashSet<ClientEndorsementEntity>(0);
	@JsonIgnore
	private Set<CliPolRelationshipEntity> cliPolRelationships = new HashSet<CliPolRelationshipEntity>(0);
	@JsonIgnore
	private Set<BankAccountEntity> bankAccounts = new HashSet<BankAccountEntity>(0);
	@JsonIgnore
	private Set<IsSentToEntity> isSentTos = new HashSet<IsSentToEntity>(0);
	private Set<ClientContactDetailEntity> clientContactDetails = new HashSet<ClientContactDetailEntity>(0);

	private Set<ClientLinkedPersonEntity> clientLinkedPersons = new HashSet<>(0);
	
	/**
	 * @return the gdprStartdate
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "GDPR_STARTDATE")
	public Date getGdprStartdate() {
		return gdprStartdate;
	}

	/**
	 * @param gdprStartdate the gdprStartdate to set
	 */
	public void setGdprStartdate(Date gdprStartdate) {
		this.gdprStartdate = gdprStartdate;
	}

	/**
	 * @return the gdprEnddate
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "GDPR_ENDDATE")
	public Date getGdprEnddate() {
		return gdprEnddate;
	}

	/**
	 * @param gdprEnddate the gdprEnddate to set
	 */
	public void setGdprEnddate(Date gdprEnddate) {
		this.gdprEnddate = gdprEnddate;
	}

	/**
	 * @return the exceptRisk
	 */
	@Column(name = "EXCEPT_RISK", length = 1, nullable = true)
	public Boolean getExceptRisk() {
		return exceptRisk;
	}

	/**
	 * @param exceptRisk the exceptRisk to set
	 */
	public void setExceptRisk(Boolean exceptRisk) {
		this.exceptRisk = exceptRisk;
	}

	/**
	 * @return the exceptActivityRisk
	 */
	@Column(name = "EXCEPT_ACTIVITY_RISK", length = 1, nullable = true)
	public Boolean getExceptActivityRisk() {
		return exceptActivityRisk;
	}

	/**
	 * @param exceptActivityRisk the exceptActivityRisk to set
	 */
	public void setExceptActivityRisk(Boolean exceptActivityRisk) {
		this.exceptActivityRisk = exceptActivityRisk;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_OF_SELF_CERT")
	public Date getDateOfSelfCert() {
		return dateOfSelfCert;
	}

	public void setDateOfSelfCert(Date dateOfSelfCert) {
		this.dateOfSelfCert = dateOfSelfCert;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "CRS_DATE_OF_LAST_DEC")
	public Date getCrsDateOfLastDec() {
		return crsDateOfLastDec;
	}

	public void setCrsDateOfLastDec(Date crsDateOfLastDec) {
		this.crsDateOfLastDec = crsDateOfLastDec;
	}

	@Id
	@Column(name = "CLI_ID", unique = true, nullable = false)
	public int getCliId() {
		return this.cliId;
	}

	public void setCliId(int cliId) {
		this.cliId = cliId;
	}

	@Column(name = "NAME", nullable = false, length = 40)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "TYPE", nullable = false)
	public int getType() {
		return this.type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@Column(name = "STATUS", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "SUB_STATUS")
	public Integer getSubStatus() {
		return this.subStatus;
	}

	public void setSubStatus(Integer subStatus) {
		this.subStatus = subStatus;
	}

	@Column(name = "OTHER_FORNAMES", length = 40)
	public String getOtherFornames() {
		return this.otherFornames;
	}

	public void setOtherFornames(String otherFornames) {
		this.otherFornames = otherFornames;
	}

	@Column(name = "FIRST_NAME", length = 30)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "TITLE", length = 8)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_OF_BIRTH", length = 23)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "SEX")
	public Integer getSex() {
		return this.sex;
	}

	public void setSex(Integer sex) {
		this.sex = sex;
	}

	@Column(name = "SMOKER")
	public Integer getSmoker() {
		return this.smoker;
	}

	public void setSmoker(Integer smoker) {
		this.smoker = smoker;
	}

	@Column(name = "EMAIL", length = 40)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "RISK_CAT", length = 8)
	public String getRiskCat() {
		return this.riskCat;
	}

	public void setRiskCat(String riskCat) {
		this.riskCat = riskCat;
	}

	@Column(name = "SALUTATION", length = 40)
	public String getSalutation() {
		return this.salutation;
	}

	public void setSalutation(String salutation) {
		this.salutation = salutation;
	}

	@Column(name = "MOBILE_TEL_NO", length = 20)
	public String getMobileTelNo() {
		return this.mobileTelNo;
	}

	public void setMobileTelNo(String mobileTelNo) {
		this.mobileTelNo = mobileTelNo;
	}

	@Column(name = "RESIDENTIAL_PROFILE", length = 8)
	public String getResidentialProfile() {
		return this.residentialProfile;
	}

	public void setResidentialProfile(String residentialProfile) {
		this.residentialProfile = residentialProfile;
	}

	@Column(name = "WORK_TEL_NO", length = 20)
	public String getWorkTelNo() {
		return this.workTelNo;
	}

	public void setWorkTelNo(String workTelNo) {
		this.workTelNo = workTelNo;
	}

	@Column(name = "LEISURE_RISK_CAT", length = 8)
	public String getLeisureRiskCat() {
		return this.leisureRiskCat;
	}

	public void setLeisureRiskCat(String leisureRiskCat) {
		this.leisureRiskCat = leisureRiskCat;
	}

	@Column(name = "MAIDEN_NAME", length = 30)
	public String getMaidenName() {
		return this.maidenName;
	}

	public void setMaidenName(String maidenName) {
		this.maidenName = maidenName;
	}

	@Column(name = "DOCUMENTATION_LANGUAGE")
	public Integer getDocumentationLanguage() {
		return this.documentationLanguage;
	}

	public void setDocumentationLanguage(Integer documentationLanguage) {
		this.documentationLanguage = documentationLanguage;
	}

	@Column(name = "NAME_STYLE")
	public Integer getNameStyle() {
		return this.nameStyle;
	}

	public void setNameStyle(Integer nameStyle) {
		this.nameStyle = nameStyle;
	}

	@Column(name = "AGE_ADMITTED")
	public Integer getAgeAdmitted() {
		return this.ageAdmitted;
	}

	public void setAgeAdmitted(Integer ageAdmitted) {
		this.ageAdmitted = ageAdmitted;
	}

	@Column(name = "MATCH0", length = 20)
	public String getMatch0() {
		return this.match0;
	}

	public void setMatch0(String match0) {
		this.match0 = match0;
	}

	@Column(name = "WEIGHT", precision = 6)
	public BigDecimal getWeight() {
		return this.weight;
	}

	public void setWeight(BigDecimal weight) {
		this.weight = weight;
	}

	@Column(name = "HEIGHT")
	public Integer getHeight() {
		return this.height;
	}

	public void setHeight(Integer height) {
		this.height = height;
	}

	@Column(name = "MARITAL_STATUS")
	public Integer getMaritalStatus() {
		return this.maritalStatus;
	}

	public void setMaritalStatus(Integer maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	@Column(name = "NATIONALITY", length = 20)
	public String getNationality() {
		return this.nationality;
	}

	public void setNationality(String nationality) {
		this.nationality = nationality;
	}

	@Column(name = "CORRESP_CONTACT_TYPE", length = 10)
	public String getCorrespContactType() {
		return this.correspContactType;
	}

	public void setCorrespContactType(String correspContactType) {
		this.correspContactType = correspContactType;
	}

	@Column(name = "CLASSIFICATION", length = 8)
	public String getClassification() {
		return this.classification;
	}

	public void setClassification(String classification) {
		this.classification = classification;
	}

	@Column(name = "NATIONAL_ID_NO", length = 20)
	public String getNationalIdNo() {
		return this.nationalIdNo;
	}

	public void setNationalIdNo(String nationalIdNo) {
		this.nationalIdNo = nationalIdNo;
	}

	@Column(name = "TAX_NUMBER", length = 12)
	public String getTaxNumber() {
		return this.taxNumber;
	}

	public void setTaxNumber(String taxNumber) {
		this.taxNumber = taxNumber;
	}

	@Column(name = "PROFILE", length = 8)
	public String getProfile() {
		return this.profile;
	}

	public void setProfile(String profile) {
		this.profile = profile;
	}

	@Column(name = "AGE_ADM_BASIS", length = 8)
	public String getAgeAdmBasis() {
		return this.ageAdmBasis;
	}

	public void setAgeAdmBasis(String ageAdmBasis) {
		this.ageAdmBasis = ageAdmBasis;
	}

	@Column(name = "CREATED_PROCESS", length = 12)
	public String getCreatedProcess() {
		return this.createdProcess;
	}

	public void setCreatedProcess(String createdProcess) {
		this.createdProcess = createdProcess;
	}

	@Column(name = "MODIFY_PROCESS", length = 12)
	public String getModifyProcess() {
		return this.modifyProcess;
	}

	public void setModifyProcess(String modifyProcess) {
		this.modifyProcess = modifyProcess;
	}

	@Column(name = "CREATED_BY", length = 5)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CHANGE_EFFECTIVE_DATE", length = 23)
	public Date getChangeEffectiveDate() {
		return this.changeEffectiveDate;
	}

	public void setChangeEffectiveDate(Date changeEffectiveDate) {
		this.changeEffectiveDate = changeEffectiveDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATED_DATE", nullable = false, length = 23)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TIME", nullable = false, length = 23)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "MODIFY_BY", length = 5)
	public String getModifyBy() {
		return this.modifyBy;
	}

	public void setModifyBy(String modifyBy) {
		this.modifyBy = modifyBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFY_DATE", length = 23)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_TIME", length = 23)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "PLACE_OF_BIRTH", length = 40)
	public String getPlaceOfBirth() {
		return this.placeOfBirth;
	}

	public void setPlaceOfBirth(String placeOfBirth) {
		this.placeOfBirth = placeOfBirth;
	}

	@Column(name = "KNOW_YOUR_CUSTOMER", length = 8)
	public String getKnowYourCustomer() {
		return this.knowYourCustomer;
	}

	public void setKnowYourCustomer(String knowYourCustomer) {
		this.knowYourCustomer = knowYourCustomer;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "KYC_DATE", length = 23)
	public Date getKycDate() {
		return this.kycDate;
	}

	public void setKycDate(Date kycDate) {
		this.kycDate = kycDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ID_EXPIRY_DATE", length = 23)
	public Date getIdExpiryDate() {
		return this.idExpiryDate;
	}

	public void setIdExpiryDate(Date idExpiryDate) {
		this.idExpiryDate = idExpiryDate;
	}

	@Column(name = "HEALTH_DECLARATION", length = 8)
	public String getHealthDeclaration() {
		return this.healthDeclaration;
	}

	public void setHealthDeclaration(String healthDeclaration) {
		this.healthDeclaration = healthDeclaration;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "HEALTH_DEC_DATE", length = 23)
	public Date getHealthDecDate() {
		return this.healthDecDate;
	}

	public void setHealthDecDate(Date healthDecDate) {
		this.healthDecDate = healthDecDate;
	}

	@Column(name = "SAFEWATCH_BIRTHDATE", length = 10, updatable = false)
	public String getSafewatchBirthdate() {
		return this.safewatchBirthdate;
	}

	public void setSafewatchBirthdate(String safewatchBirthdate) {
		this.safewatchBirthdate = safewatchBirthdate;
	}

	@Column(name = "CLASSIFICATION_DETAILS", length = 50)
	public String getClassificationDetails() {
		return this.classificationDetails;
	}

	public void setClassificationDetails(String classificationDetails) {
		this.classificationDetails = classificationDetails;
	}

	@Column(name = "POLITICALLY_EXPOSED_PERSON", length = 15)
	public String getPoliticallyExposedPerson() {
		return this.politicallyExposedPerson;
	}

	public void setPoliticallyExposedPerson(String politicallyExposedPerson) {
		this.politicallyExposedPerson = politicallyExposedPerson;
	}

	@Column(name = "PEP_FUNCTION", length = 50)
	public String getPepFunction() {
		return this.pepFunction;
	}

	public void setPepFunction(String pepFunction) {
		this.pepFunction = pepFunction;
	}

	@Column(name = "INSIDER_TRADING", length = 15)
	public String getInsiderTrading() {
		return this.insiderTrading;
	}

	public void setInsiderTrading(String insiderTrading) {
		this.insiderTrading = insiderTrading;
	}

	@Column(name = "INSIDER_TRADING_DETAILS", length = 50)
	public String getInsiderTradingDetails() {
		return this.insiderTradingDetails;
	}

	public void setInsiderTradingDetails(String insiderTradingDetails) {
		this.insiderTradingDetails = insiderTradingDetails;
	}

	@Column(name = "DAP", length=1)
	public String getDap() {
		return this.dap;
	}

	public void setDap(String dap) {
		this.dap = dap;
	}

	@Column(name = "COUNTRY_OF_BIRTH")
	public String getCountryOfBirth() {
		return countryOfBirth;
	}

	public void setCountryOfBirth(String countryOfBirth) {
		this.countryOfBirth = countryOfBirth;
	}

	@Column(name = "PROVINCE_OF_BIRTH")
	public String getProvinceOfBirth() {
		return provinceOfBirth;
	}

	public void setProvinceOfBirth(String provinceOfBirth) {
		this.provinceOfBirth = provinceOfBirth;
	}

	@Column(name = "PROFESSION")
	public String getProfession() {
		return profession;
	}

	public void setProfession(String profession) {
		this.profession = profession;
	}

	@Column(name = "ACTIVITY_RISK_CAT")
	public Integer getActivityRiskCat() {
		return activityRiskCat;
	}

	public void setActivityRiskCat(Integer activityRiskCat) {
		this.activityRiskCat = activityRiskCat;
	}

	@Column(name = "DATE_OF_REVISION")
	@Temporal(TemporalType.DATE)
	public Date getDateOfRevision() {
		return dateOfRevision;
	}

	public void setDateOfRevision(Date dateOfRevision) {
		this.dateOfRevision = dateOfRevision;
	}

	@Column(name = "NAT_ID_COUNTRY")
	public String getNatIdCountry() {
		return natIdCountry;
	}

	public void setNatIdCountry(String natIdCountry) {
		this.natIdCountry = natIdCountry;
	}

	@Column(name = "NATIONAL_ID_2")
	public String getNationalId2() {
		return nationalId2;
	}

	public void setNationalId2(String nationalId2) {
		this.nationalId2 = nationalId2;
	}

	@Column(name = "NAT_ID2_COUNTRY")
	public String getNatId2Country() {
		return natId2Country;
	}

	public void setNatId2Country(String natId2Country) {
		this.natId2Country = natId2Country;
	}

	@Column(name = "FIDUCIARY")
	public Integer getFiduciary() {
		return fiduciary;
	}

	public void setFiduciary(Integer fiduciary) {
		this.fiduciary = fiduciary;
	}

	@Column(name = "VAT_NUMBER")
	public String getVatNumber() {
		return vatNumber;
	}

	public void setVatNumber(String vatNumber) {
		this.vatNumber = vatNumber;
	}

	@Column(name = "CIRCULAR_LETTER")
	public String getCircularLetter() {
		return circularLetter;
	}

	public void setCircularLetter(String circularLetter) {
		this.circularLetter = circularLetter;
	}

	@Column(name = "CLASS_OF_RISK")
	public String getClassOfRisk() {
		return classOfRisk;
	}

	public void setClassOfRisk(String classOfRisk) {
		this.classOfRisk = classOfRisk;
	}

	@Column(name = "STATEMENT_BY_EMAIL")
	public String getStatementByEmail() {
		return statementByEmail;
	}

	public void setStatementByEmail(String statementByEmail) {
		this.statementByEmail = statementByEmail;
	}
	
	@Column(name = "MEDIA_EXPOSED_PERSON")
	public String getMediaExposedPerson() {
		return mediaExposedPerson;
	}

	public void setMediaExposedPerson(String mediaExposedPerson) {
		this.mediaExposedPerson = mediaExposedPerson;
	}

	@Column(name = "MEP_DETAIL")
	public String getMepDetail() {
		return mepDetail;
	}

	public void setMepDetail(String mepDetail) {
		this.mepDetail = mepDetail;
	}

	@Column(name = "RELATIVE_CLOSE_ASSOC")
	public String getRelativeCloseAssoc() {
		return relativeCloseAssoc;
	}

	public void setRelativeCloseAssoc(String relativeCloseAssoc) {
		this.relativeCloseAssoc = relativeCloseAssoc;
	}

	@Column(name = "RCA_DETAIL")
	public String getRcaDetail() {
		return rcaDetail;
	}

	public void setRcaDetail(String rcaDetail) {
		this.rcaDetail = rcaDetail;
	}

	@Column(name = "CRS_STATUS")
	public String getCrsStatus() {
		return crsStatus;
	}

	public void setCrsStatus(String crsStatus) {
		this.crsStatus = crsStatus;
	}

	@Column(name = "CRS_EXACT_STATUS")
	public String getCrsExactStatus() {
		return crsExactStatus;
	}

	public void setCrsExactStatus(String crsExactStatus) {
		this.crsExactStatus = crsExactStatus;
	}

	@Column(name = "COMMERCIAL_ENTITY")
	public String getCommercialEntity() {
		return commercialEntity;
	}

	public void setCommercialEntity(String commercialEntity) {
		this.commercialEntity = commercialEntity;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<MemberDetailEntity> getMemberDetails() {
		return this.memberDetails;
	}

	public void setMemberDetails(Set<MemberDetailEntity> memberDetails) {
		this.memberDetails = memberDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<DocumentRequestEntity> getDocumentRequests() {
		return this.documentRequests;
	}

	public void setDocumentRequests(Set<DocumentRequestEntity> documentRequests) {
		this.documentRequests = documentRequests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientGeneralDetailEntity> getClientGeneralDetails() {
		return this.clientGeneralDetails;
	}

	public void setClientGeneralDetails(Set<ClientGeneralDetailEntity> clientGeneralDetails) {
		this.clientGeneralDetails = clientGeneralDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<PolicyRequirementEntity> getPolicyRequirements() {
		return this.policyRequirements;
	}

	public void setPolicyRequirements(Set<PolicyRequirementEntity> policyRequirements) {
		this.policyRequirements = policyRequirements;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "HAVE", joinColumns = {
			@JoinColumn(name = "FK_CLIENTSCLI_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "FK_CLI_CLI_RELACCR_ID", nullable = false, updatable = false) })
	public Set<CliCliRelationEntity> getCliCliRelations() {
		return this.cliCliRelations;
	}

	public void setCliCliRelations(Set<CliCliRelationEntity> cliCliRelations) {
		this.cliCliRelations = cliCliRelations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<GeneralNoteEntity> getGeneralNotes() {
		return this.generalNotes;
	}

	public void setGeneralNotes(Set<GeneralNoteEntity> generalNotes) {
		this.generalNotes = generalNotes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientClaimsDetailEntity> getClientClaimsDetails() {
		return this.clientClaimsDetails;
	}

	public void setClientClaimsDetails(Set<ClientClaimsDetailEntity> clientClaimsDetails) {
		this.clientClaimsDetails = clientClaimsDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientEndorsementEntity> getClientEndorsements() {
		return this.clientEndorsements;
	}

	public void setClientEndorsements(Set<ClientEndorsementEntity> clientEndorsements) {
		this.clientEndorsements = clientEndorsements;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	@NotFound(action = NotFoundAction.IGNORE)
	public Set<CliPolRelationshipEntity> getCliPolRelationships() {
		return this.cliPolRelationships;
	}

	public void setCliPolRelationships(Set<CliPolRelationshipEntity> cliPolRelationships) {
		this.cliPolRelationships = cliPolRelationships;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	@NotFound(action = NotFoundAction.IGNORE)
	public Set<ClientContactDetailEntity> getClientContactDetails() {
		return this.clientContactDetails;
	}

	public void setClientContactDetails(Set<ClientContactDetailEntity> clientContactDetails) {
		this.clientContactDetails = clientContactDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<BankAccountEntity> getBankAccounts() {
		return this.bankAccounts;
	}

	public void setBankAccounts(Set<BankAccountEntity> bankAccounts) {
		this.bankAccounts = bankAccounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<IsSentToEntity> getIsSentTos() {
		return this.isSentTos;
	}

	public void setIsSentTos(Set<IsSentToEntity> isSentTos) {
		this.isSentTos = isSentTos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<ClientLinkedPersonEntity> getClientLinkedPersons() {
		return clientLinkedPersons;
	}

	public void setClientLinkedPersons(Set<ClientLinkedPersonEntity> clientLinkedPersons) {
		this.clientLinkedPersons = clientLinkedPersons;
	}

}
