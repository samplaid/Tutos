package lu.wealins.liability.services.core.persistence.entity;
// Generated Dec 1, 2016 12:16:30 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import lu.wealins.liability.services.core.utils.Historizable;

/**
 * ProductValueEntity generated by hbm2java
 */
@Entity
@Table(name = "PRODUCT_VALUES"

)
@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler", "createdProcess", "modifyProcess", "createdBy", "createdDate", "createdTime", "modifyDate", "modifyTime", "modifyBy" })
@Historizable(id = "prcId")
public class ProductValueEntity implements java.io.Serializable {

	private static final long serialVersionUID = -9095996437083260534L;

	private String prcId;
	@JsonIgnore
	private AgentEntity agent;
	@JsonIgnore
	private ControlDefinitionEntity controlDefinition;
	@JsonIgnore
	private FundEntity fund;
	@JsonIgnore
	private PolicyEntity policy;
	@JsonIgnore
	private PolicyAgentShareEntity policyAgentShare;
	@JsonIgnore
	private PolicyCoverageEntity policyCoverage;
	@JsonIgnore
	private ProductLineEntity productLine;
	@JsonIgnore
	private ProductEntity product;
	@JsonIgnore
	private ReinsuranceTreatyEntity reinsuranceTreaty;
	private Long tableNumber;
	private Integer valueFrom;
	private String currency;
	private String control;
	private BigDecimal numericValue;
	private String productLineId;
	private String alphaValue;
	private Integer decPlaces;
	private String codeValue;
	private int dataType;
	private Integer subDataType;
	private String createdProcess;
	private String modifyProcess;
	private int status;
	private String createdBy;
	private Date createdDate;
	private Date createdTime;
	private String modifyBy;
	private Date modifyDate;
	private Date modifyTime;
	private BigDecimal maximumValue;
	private Long maximumTableNumber;
	private Integer maximumValueFrom;
	private Integer useage;

	@Id
	@Column(name = "PRC_ID", unique = true, nullable = false, length = 30)
	public String getPrcId() {
		return this.prcId;
	}

	public void setPrcId(String prcId) {
		this.prcId = prcId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_AGENTSAGT_ID")
	public AgentEntity getAgent() {
		return this.agent;
	}

	public void setAgent(AgentEntity agent) {
		this.agent = agent;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_CONTROL_DEFICDF_ID")
	@NotFound(action = NotFoundAction.IGNORE)
	public ControlDefinitionEntity getControlDefinition() {
		return this.controlDefinition;
	}

	public void setControlDefinition(ControlDefinitionEntity controlDefinition) {
		this.controlDefinition = controlDefinition;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_FUNDSFDS_ID")
	@NotFound(action = NotFoundAction.IGNORE)
	public FundEntity getFund() {
		return this.fund;
	}

	public void setFund(FundEntity fund) {
		this.fund = fund;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_POLICIESPOL_ID")
	public PolicyEntity getPolicy() {
		return this.policy;
	}

	public void setPolicy(PolicyEntity policy) {
		this.policy = policy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_POLICY_AGENTPAS_ID")
	public PolicyAgentShareEntity getPolicyAgentShare() {
		return this.policyAgentShare;
	}

	public void setPolicyAgentShare(PolicyAgentShareEntity policyAgentShare) {
		this.policyAgentShare = policyAgentShare;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_POLICY_COVERPOC_ID")
	public PolicyCoverageEntity getPolicyCoverage() {
		return this.policyCoverage;
	}

	public void setPolicyCoverage(PolicyCoverageEntity policyCoverage) {
		this.policyCoverage = policyCoverage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_PRODUCT_LINEPRL_ID")
	public ProductLineEntity getProductLine() {
		return this.productLine;
	}

	public void setProductLine(ProductLineEntity productLine) {
		this.productLine = productLine;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_PRODUCTSPRD_ID")
	public ProductEntity getProduct() {
		return this.product;
	}

	public void setProduct(ProductEntity product) {
		this.product = product;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_REINSURANCE_RIT_ID")
	public ReinsuranceTreatyEntity getReinsuranceTreaty() {
		return this.reinsuranceTreaty;
	}

	public void setReinsuranceTreaty(ReinsuranceTreatyEntity reinsuranceTreaty) {
		this.reinsuranceTreaty = reinsuranceTreaty;
	}

	@Column(name = "TABLE_NUMBER", precision = 15, scale = 0)
	public Long getTableNumber() {
		return this.tableNumber;
	}

	public void setTableNumber(Long tableNumber) {
		this.tableNumber = tableNumber;
	}

	@Column(name = "VALUE_FROM")
	public Integer getValueFrom() {
		return this.valueFrom;
	}

	public void setValueFrom(Integer valueFrom) {
		this.valueFrom = valueFrom;
	}

	@Column(name = "CURRENCY", nullable = false, length = 4)
	public String getCurrency() {
		return this.currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	@Column(name = "CONTROL", nullable = false, length = 6)
	public String getControl() {
		return this.control;
	}

	public void setControl(String control) {
		this.control = control;
	}

	@Column(name = "NUMERIC_VALUE", precision = 15, scale = 8)
	public BigDecimal getNumericValue() {
		return this.numericValue;
	}

	public void setNumericValue(BigDecimal numericValue) {
		this.numericValue = numericValue;
	}

	@Column(name = "PRODUCT_LINE", length = 20)
	public String getProductLineId() {
		return this.productLineId;
	}

	public void setProductLineId(String productLineId) {
		this.productLineId = productLineId;
	}

	@Column(name = "ALPHA_VALUE", length = 100)
	public String getAlphaValue() {
		return this.alphaValue;
	}

	public void setAlphaValue(String alphaValue) {
		this.alphaValue = alphaValue;
	}

	@Column(name = "DEC_PLACES")
	public Integer getDecPlaces() {
		return this.decPlaces;
	}

	public void setDecPlaces(Integer decPlaces) {
		this.decPlaces = decPlaces;
	}

	@Column(name = "CODE_VALUE", nullable = false, length = 20)
	public String getCodeValue() {
		return this.codeValue;
	}

	public void setCodeValue(String codeValue) {
		this.codeValue = codeValue;
	}

	@Column(name = "DATA_TYPE", nullable = false)
	public int getDataType() {
		return this.dataType;
	}

	public void setDataType(int dataType) {
		this.dataType = dataType;
	}

	@Column(name = "SUB_DATA_TYPE")
	public Integer getSubDataType() {
		return this.subDataType;
	}

	public void setSubDataType(Integer subDataType) {
		this.subDataType = subDataType;
	}

	@Column(name = "CREATED_PROCESS", length = 15)
	public String getCreatedProcess() {
		return this.createdProcess;
	}

	public void setCreatedProcess(String createdProcess) {
		this.createdProcess = createdProcess;
	}

	@Column(name = "MODIFY_PROCESS", length = 15)
	public String getModifyProcess() {
		return this.modifyProcess;
	}

	public void setModifyProcess(String modifyProcess) {
		this.modifyProcess = modifyProcess;
	}

	@Column(name = "STATUS", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", length = 5)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 23)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TIME", length = 23)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "MODIFY_BY", length = 5)
	public String getModifyBy() {
		return this.modifyBy;
	}

	public void setModifyBy(String modifyBy) {
		this.modifyBy = modifyBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_DATE", length = 23)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_TIME", length = 23)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "MAXIMUM_VALUE", precision = 15, scale = 8)
	public BigDecimal getMaximumValue() {
		return this.maximumValue;
	}

	public void setMaximumValue(BigDecimal maximumValue) {
		this.maximumValue = maximumValue;
	}

	@Column(name = "MAXIMUM_TABLE_NUMBER", precision = 15, scale = 0)
	public Long getMaximumTableNumber() {
		return this.maximumTableNumber;
	}

	public void setMaximumTableNumber(Long maximumTableNumber) {
		this.maximumTableNumber = maximumTableNumber;
	}

	@Column(name = "MAXIMUM_VALUE_FROM")
	public Integer getMaximumValueFrom() {
		return this.maximumValueFrom;
	}

	public void setMaximumValueFrom(Integer maximumValueFrom) {
		this.maximumValueFrom = maximumValueFrom;
	}

	@Column(name = "USEAGE")
	public Integer getUseage() {
		return this.useage;
	}

	public void setUseage(Integer useage) {
		this.useage = useage;
	}

}
