package lu.wealins.liability.services.core.persistence.entity;
// Generated Dec 1, 2016 12:16:30 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * AccountTransactionEntity generated by hbm2java
 */
@NamedQueries({
		@NamedQuery(name = "AccountTransactionEntity.findNoExportedTransactionsWithClosedPostingSet", query = "SELECT DISTINCT ac FROM AccountTransactionEntity ac WHERE ac.postingSet.sapStatus = null  "
				+ "AND ac.postingSet.status = 2 "
				+ "AND ac.eventType IN :eventTypeList ")
})
@Entity
@Table(name = "ACCOUNT_TRANSACTIONS")
@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler", "createdProcess", "modifyProcess", "createdBy", "createdDate", "createdTime", "modifyDate", "modifyTime", "modifyBy" })
public class AccountTransactionEntity implements java.io.Serializable {

	private long atrId;
	@JsonIgnore
	private AccountBalanceEntity accountBalance;
	@JsonIgnore
	private FundTransactionEntity fundTransaction;
	@JsonIgnore
	private PolicyCoverageEntity policyCoverage;
	@JsonIgnore
	private PostingSetEntity postingSet;
	@JsonIgnore
	private TransactionEntity transaction;
	private Long transaction0;
	private int lineNo;
	private Integer set0;
	private String accset;
	private Integer auditReportNo;
	private Character dbcr;
	private String policy;
	private String details;
	private Date effectiveDate;
	private int eventType;
	private Long matched;
	private Integer receiptType;
	private Integer eventSubType;
	private Integer reversalLineNo;
	private Integer statement;
	private Integer commissionType;
	private String account;
	private String centre;
	private BigDecimal amount;
	private int company;
	private String branch;
	private String currency;
	private int financialYear;
	private int status;
	private String createdBy;
	private int period;
	private Date createdDate;
	private Date createdTime;
	private String createdProcess;
	private Date createdSystemDate;
	private String modifyBy;
	private Date modifyDate;
	private Date modifyTime;
	private String modifyProcess;
	private Date modifySystemDate;
	private Date previousPaidToDate;
	private String fkAccountsaccId;
	private Integer type;

	@Id
	@Column(name = "ATR_ID", unique = true, nullable = false, precision = 15, scale = 0)
	public long getAtrId() {
		return this.atrId;
	}

	public void setAtrId(long atrId) {
		this.atrId = atrId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_ACCOUNT_BALAABN_ID")
	public AccountBalanceEntity getAccountBalance() {
		return this.accountBalance;
	}

	public void setAccountBalance(AccountBalanceEntity accountBalance) {
		this.accountBalance = accountBalance;
	}

	@ManyToOne(fetch = FetchType.LAZY )
	@NotFound(
	        action = NotFoundAction.IGNORE)
	@JoinColumn(name = "FK_FUND_TRANSACFTR_ID")
	public FundTransactionEntity getFundTransaction() {
		return this.fundTransaction;
	}

	public void setFundTransaction(FundTransactionEntity fundTransaction) {
		this.fundTransaction = fundTransaction;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_POLICY_COVERPOC_ID")
	public PolicyCoverageEntity getPolicyCoverage() {
		return this.policyCoverage;
	}

	public void setPolicyCoverage(PolicyCoverageEntity policyCoverage) {
		this.policyCoverage = policyCoverage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_POSTING_SETSPST_ID")
	public PostingSetEntity getPostingSet() {
		return this.postingSet;
	}

	public void setPostingSet(PostingSetEntity postingSet) {
		this.postingSet = postingSet;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_TRANSACTIONSTRN_ID")
	public TransactionEntity getTransaction() {
		return this.transaction;
	}

	public void setTransaction(TransactionEntity transaction) {
		this.transaction = transaction;
	}

	@Column(name = "TRANSACTION0", precision = 14, scale = 0)
	public Long getTransaction0() {
		return this.transaction0;
	}

	public void setTransaction0(Long transaction0) {
		this.transaction0 = transaction0;
	}

	@Column(name = "LINE_NO", nullable = false)
	public int getLineNo() {
		return this.lineNo;
	}

	public void setLineNo(int lineNo) {
		this.lineNo = lineNo;
	}

	@Column(name = "SET0")
	public Integer getSet0() {
		return this.set0;
	}

	public void setSet0(Integer set0) {
		this.set0 = set0;
	}

	@Column(name = "ACCSET", length = 4)
	public String getAccset() {
		return this.accset;
	}

	public void setAccset(String accset) {
		this.accset = accset;
	}

	@Column(name = "AUDIT_REPORT_NO")
	public Integer getAuditReportNo() {
		return this.auditReportNo;
	}

	public void setAuditReportNo(Integer auditReportNo) {
		this.auditReportNo = auditReportNo;
	}

	@Column(name = "DBCR", length = 1)
	public Character getDbcr() {
		return this.dbcr;
	}

	public void setDbcr(Character dbcr) {
		this.dbcr = dbcr;
	}

	@Column(name = "POLICY", length = 14)
	public String getPolicy() {
		return this.policy;
	}

	public void setPolicy(String policy) {
		this.policy = policy;
	}

	@Column(name = "DETAILS", length = 25)
	public String getDetails() {
		return this.details;
	}

	public void setDetails(String details) {
		this.details = details;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EFFECTIVE_DATE", nullable = false, length = 23)
	public Date getEffectiveDate() {
		return this.effectiveDate;
	}

	public void setEffectiveDate(Date effectiveDate) {
		this.effectiveDate = effectiveDate;
	}

	@Column(name = "EVENT_TYPE", nullable = false)
	public int getEventType() {
		return this.eventType;
	}

	public void setEventType(int eventType) {
		this.eventType = eventType;
	}

	@Column(name = "MATCHED", precision = 10, scale = 0)
	public Long getMatched() {
		return this.matched;
	}

	public void setMatched(Long matched) {
		this.matched = matched;
	}

	@Column(name = "RECEIPT_TYPE")
	public Integer getReceiptType() {
		return this.receiptType;
	}

	public void setReceiptType(Integer receiptType) {
		this.receiptType = receiptType;
	}

	@Column(name = "EVENT_SUB_TYPE")
	public Integer getEventSubType() {
		return this.eventSubType;
	}

	public void setEventSubType(Integer eventSubType) {
		this.eventSubType = eventSubType;
	}

	@Column(name = "REVERSAL_LINE_NO")
	public Integer getReversalLineNo() {
		return this.reversalLineNo;
	}

	public void setReversalLineNo(Integer reversalLineNo) {
		this.reversalLineNo = reversalLineNo;
	}

	@Column(name = "STATEMENT")
	public Integer getStatement() {
		return this.statement;
	}

	public void setStatement(Integer statement) {
		this.statement = statement;
	}

	@Column(name = "COMMISSION_TYPE")
	public Integer getCommissionType() {
		return this.commissionType;
	}

	public void setCommissionType(Integer commissionType) {
		this.commissionType = commissionType;
	}

	@Column(name = "ACCOUNT", nullable = false, length = 12)
	public String getAccount() {
		return this.account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	@Column(name = "CENTRE", nullable = false, length = 16)
	public String getCentre() {
		return this.centre;
	}

	public void setCentre(String centre) {
		this.centre = centre;
	}

	@Column(name = "AMOUNT", precision = 15)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "COMPANY", nullable = false)
	public int getCompany() {
		return this.company;
	}

	public void setCompany(int company) {
		this.company = company;
	}

	@Column(name = "BRANCH", nullable = false, length = 6)
	public String getBranch() {
		return this.branch;
	}

	public void setBranch(String branch) {
		this.branch = branch;
	}

	@Column(name = "CURRENCY", nullable = false, length = 4)
	public String getCurrency() {
		return this.currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	@Column(name = "FINANCIAL_YEAR", nullable = false)
	public int getFinancialYear() {
		return this.financialYear;
	}

	public void setFinancialYear(int financialYear) {
		this.financialYear = financialYear;
	}

	@Column(name = "STATUS", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "CREATED_BY", nullable = false, length = 5)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "PERIOD", nullable = false)
	public int getPeriod() {
		return this.period;
	}

	public void setPeriod(int period) {
		this.period = period;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", nullable = false, length = 23)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TIME", nullable = false, length = 23)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "CREATED_PROCESS", length = 12)
	public String getCreatedProcess() {
		return this.createdProcess;
	}

	public void setCreatedProcess(String createdProcess) {
		this.createdProcess = createdProcess;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_SYSTEM_DATE", length = 23)
	public Date getCreatedSystemDate() {
		return this.createdSystemDate;
	}

	public void setCreatedSystemDate(Date createdSystemDate) {
		this.createdSystemDate = createdSystemDate;
	}

	@Column(name = "MODIFY_BY", length = 5)
	public String getModifyBy() {
		return this.modifyBy;
	}

	public void setModifyBy(String modifyBy) {
		this.modifyBy = modifyBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_DATE", length = 23)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_TIME", length = 23)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "MODIFY_PROCESS", length = 12)
	public String getModifyProcess() {
		return this.modifyProcess;
	}

	public void setModifyProcess(String modifyProcess) {
		this.modifyProcess = modifyProcess;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFY_SYSTEM_DATE", length = 23)
	public Date getModifySystemDate() {
		return this.modifySystemDate;
	}

	public void setModifySystemDate(Date modifySystemDate) {
		this.modifySystemDate = modifySystemDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PREVIOUS_PAID_TO_DATE", length = 23)
	public Date getPreviousPaidToDate() {
		return this.previousPaidToDate;
	}

	public void setPreviousPaidToDate(Date previousPaidToDate) {
		this.previousPaidToDate = previousPaidToDate;
	}

	@Column(name = "FK_ACCOUNTSACC_ID", length = 12)
	public String getFkAccountsaccId() {
		return this.fkAccountsaccId;
	}

	public void setFkAccountsaccId(String fkAccountsaccId) {
		this.fkAccountsaccId = fkAccountsaccId;
	}

	@Column(name = "TYPE")
	public Integer getType() {
		return this.type;
	}

	public void setType(Integer type) {
		this.type = type;
	}

}
